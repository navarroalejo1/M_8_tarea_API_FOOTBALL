"""
M√≥dulo de autenticaci√≥n de usuarios en Streamlit.
"""

import streamlit as st
import toml

CONFIG_PATH = ".streamlit/config.toml"

def load_config():
    """Carga la configuraci√≥n desde el archivo TOML."""
    try:
        with open(CONFIG_PATH, "r", encoding="utf-8") as f:
            return toml.load(f)
    except Exception as e:
        st.error(f"‚ùå Error cargando config.toml: {e}")
        return {}

config = load_config()

def validar_usuario(usuario, contrase√±a):
    """Valida si el usuario y la contrase√±a son correctos."""
    usuarios_validos = config.get("authentication", {}).get("usuarios_validos", {})
    return usuarios_validos.get(usuario) == contrase√±a

def show_login():
    """Muestra el formulario de inicio de sesi√≥n."""
    st.title("üîê Iniciar Sesi√≥n")
    usuario = st.text_input("Usuario:", key="usuario_input")
    contrase√±a = st.text_input("Contrase√±a:", type="password", key="contrase√±a_input")

    if st.button("Ingresar"):
        if validar_usuario(usuario, contrase√±a):
            st.session_state["logged_in"] = True
            st.session_state["usuario"] = usuario
            st.success(f"‚úÖ Bienvenido {usuario}")
            st.rerun()  # üîπ Correcci√≥n: Se usa `st.rerun()` en lugar de `st.experimental_rerun()`
        else:
            st.error("‚ùå Usuario o contrase√±a incorrectos")

def check_login():
    """Verifica si el usuario est√° autenticado antes de permitir el acceso."""
    if "logged_in" not in st.session_state:
        st.session_state["logged_in"] = False

    if not st.session_state["logged_in"]:
        show_login()
        st.stop()

